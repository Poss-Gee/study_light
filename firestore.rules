rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Subjects can be read by any authenticated user.
    // Only teachers can create, update, or delete subjects and their notes.
    match /subjects/{subjectId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
      
      match /notes/{noteId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
      }
    }

    // Quizzes can be read by any authenticated user.
    // Only teachers can create, update, or delete quizzes.
    match /quizzes/{quizId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }

    // Users can be created by anyone (for registration).
    // Users can only read/update their own profile.
    // Teachers can read any user's profile.
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == userId 
                         || (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher');
    }

    // Students can create submissions for themselves.
    // Students can read their own submissions.
    // Teachers can read any submission.
    match /submissions/{submissionId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.studentId;
      allow read: if (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher')
                   || (request.auth != null && request.auth.uid == resource.data.studentId);
      allow write: if false; // Submissions are immutable
    }
  }
}
